// Generated by CoffeeScript 1.7.1

/*
--------------------------------------------
     Begin app.coffee
--------------------------------------------
 */

(function() {
  angular.module('app', ['ngRoute', 'ngAnimate', 'config', 'filters', 'run', 'begin', 'game', 'results', 'cdAnimate', 'cdBimg', 'cdClock', 'cdPickRandom', 'cdShuffle', 'cdTimeout']);


  /*
  --------------------------------------------
       Begin config.coffee
  --------------------------------------------
   */

  angular.module('config', []).config(function($routeProvider) {
    return $routeProvider.when("/begin", {
      controller: "BeginCtrl",
      templateUrl: "pages/begin.html"
    }).when("/game", {
      controller: "GameCtrl",
      templateUrl: "pages/game.html"
    }).when("/results", {
      controller: "ResultsCtrl",
      templateUrl: "pages/results.html"
    }).otherwise({
      redirectTo: "/begin"
    });
  });


  /*
  --------------------------------------------
       Begin filters.coffee
  --------------------------------------------
   */

  angular.module("filters", []).filter("time", function($rootScope) {
    return function(time, precision) {
      if (precision == null) {
        precision = 1;
      }
      return (time / $rootScope.ticksPerSecond).toFixed(precision);
    };
  });


  /*
  --------------------------------------------
       Begin run.coffee
  --------------------------------------------
   */

  angular.module('run', []).run(function($rootScope, $location, $http, $timeout) {
    $rootScope.difficulty = 4;
    $rootScope.length = 16;
    $rootScope.bestTime = Infinity;
    $rootScope.bestMistakes = Infinity;
    $rootScope.ticksPerSecond = 10;
    $rootScope.$on("$routeChangeSuccess", function(e, toRoute) {
      return $timeout(function() {
        if (($location.path() != null) && ((toRoute != null ? toRoute.scope : void 0) != null)) {
          return toRoute.scope.route = $location.path().slice(1);
        }
      });
    });
    $rootScope.contentPromise = $http.get('content/content.json');
    return $rootScope.contentPromise.then(function(response) {
      return $rootScope.content = angular.fromJson(response.data);
    });
  });


  /*
  --------------------------------------------
       Begin begin.coffee
  --------------------------------------------
   */

  angular.module('begin', []).controller("BeginCtrl", function($rootScope, $scope, $timeout) {
    return $rootScope.contentPromise.then(function() {
      var choices, randomize;
      choices = $rootScope.content.choices.slice(0, 11);
      randomize = function() {
        var old;
        old = $scope.tile;
        while ($scope.tile === old) {
          $scope.tile = choices[Math.random() * choices.length | 0];
        }
        return $timeout(randomize, 200);
      };
      return randomize();
    });
  });


  /*
  --------------------------------------------
       Begin game.coffee
  --------------------------------------------
   */

  angular.module('game', []).controller("GameCtrl", function($rootScope, $scope, $location, $route, cdShuffle, cdClock, cdPickRandom, cdTimeout) {
    return $rootScope.contentPromise.then(function() {
      var choice, clockStarted, game, inputDisabled, startClock, _i, _len, _ref;
      game = $rootScope.game = {};
      game.choices = cdShuffle($rootScope.content.choices).slice(0, $rootScope.length);
      _ref = game.choices;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        choice = _ref[_i];
        choice.mistakes = 0;
        choice.wrongTiles = [];
        choice.wrongNames = [];
      }
      game.results = [];
      game.time = 0;
      game.mistakes = 0;
      inputDisabled = false;
      $scope.flipMode = {};
      $scope.flipMode.flipIn = false;
      $scope.flipMode.flipOut = false;
      $scope.restart = $route.reload;
      clockStarted = false;
      startClock = function() {
        if (!clockStarted) {
          clockStarted = true;
          return cdClock($scope, 1000 / $rootScope.ticksPerSecond, function() {
            return game.time += 1;
          });
        }
      };
      return cdTimeout(1000, function() {
        var pickNewAnswer;
        (pickNewAnswer = function() {
          return $scope.currentAnswer = cdPickRandom(game.choices.slice(0, $rootScope.difficulty));
        })();
        return $scope.pick = function(choice, index) {
          startClock();
          if (!(inputDisabled || game.complete)) {
            inputDisabled = true;
            if (choice === $scope.currentAnswer) {
              game.choices.splice(index, 1);
              game.results.push(choice);
              $scope.correctness = choice.correctness = "correct";
            } else {
              game.mistakes++;
              $scope.currentAnswer.wrongTiles.push(choice);
              $scope.currentAnswer.mistakes++;
              choice.wrongNames.push($scope.currentAnswer);
              choice.mistakes++;
              $scope.correctness = choice.correctness = "wrong";
            }
            $scope.flipMode.flipOut = true;
            return cdTimeout(260, function() {
              var lastAnswer;
              delete choice.correctness;
              delete $scope.correctness;
              if (game.choices.length === 0) {
                game.complete = true;
                return $location.path("/results");
              } else {
                inputDisabled = false;
                lastAnswer = $scope.currentAnswer;
                while ($scope.currentAnswer === lastAnswer) {
                  pickNewAnswer();
                }
                $scope.flipMode.flipOut = false;
                $scope.flipMode.flipIn = true;
                return cdTimeout(260, function() {
                  return $scope.flipMode.flipIn = false;
                });
              }
            });
          }
        };
      });
    });
  });


  /*
  --------------------------------------------
       Begin results.coffee
  --------------------------------------------
   */

  angular.module('results', []).controller("ResultsCtrl", function($rootScope, $scope) {
    return $rootScope.contentPromise.then(function() {
      var choice, game, secondsPerQuestion;
      game = $rootScope.game;
      if (!(game != null ? game.complete : void 0)) {
        return;
      }
      secondsPerQuestion = (game.time / $rootScope.ticksPerSecond) / $rootScope.length;
      $scope.quip = (function() {
        switch (false) {
          case !(game.mistakes === 0 && secondsPerQuestion <= 1.1):
            return "That Was Amazing!";
          case !(game.mistakes === 0 && secondsPerQuestion >= 2.0):
            return "You Need To Go Faster";
          case !(game.mistakes <= 1 && secondsPerQuestion <= 1.5):
            return "Great Job";
          case !(game.mistakes <= 2 && secondsPerQuestion <= 2.5):
            return "You Did Well";
          case !(game.mistakes <= 6 && secondsPerQuestion <= 1.2):
            return "You Need To Slow Down";
          case !(game.mistakes >= $rootScope.length):
            return "You're not even trying!";
          default:
            return "Rough day, huh?";
        }
      })();
      if (game.time < $rootScope.bestTime) {
        $rootScope.bestTime = game.time;
        $rootScope.bestMistakes = game.mistakes;
      }
      return $scope.badResults = ((function() {
        var _i, _len, _ref, _results;
        _ref = game.results;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          choice = _ref[_i];
          if (choice.mistakes > 0) {
            _results.push(choice);
          }
        }
        return _results;
      })()).sort(function(a, b) {
        return b.mistakes - a.mistakes;
      });
    });
  });


  /*
  --------------------------------------------
       Begin cdAnimate.coffee
  --------------------------------------------
   */

  angular.module('cdAnimate', []);


  /*
  --------------------------------------------
       Begin cdBimg.coffee
  --------------------------------------------
   */

  angular.module('cdBimg', []).directive("cdBimg", function() {
    return function(scope, elm, attrs) {
      return attrs.$observe("cdBimg", function() {
        return elm.css({
          "background-image": "url(" + attrs.cdBimg + ")"
        });
      });
    };
  });


  /* SUGGESTED CSS
  [cd-bimg] {
  	background-size: cover;
  	background-repeat: no-repeat;
  	background-position: center center;
  }
   */


  /*
  --------------------------------------------
       Begin cdClock.coffee
  --------------------------------------------
   */

  angular.module('cdClock', []).service("cdClock", function($timeout) {
    return function(scope, time, call) {
      var callFunc, cancel, timeout;
      timeout = null;
      callFunc = function() {
        call();
        return timeout = $timeout(callFunc, time);
      };
      timeout = $timeout(callFunc, time);
      cancel = function() {
        return $timeout.cancel(timeout);
      };
      scope.$on("$destroy", cancel);
      return {
        cancel: cancel
      };
    };
  });


  /*
  --------------------------------------------
       Begin cdPickRandom.coffee
  --------------------------------------------
   */

  angular.module('cdPickRandom', []).service("cdPickRandom", function() {
    return function(array) {
      return array[Math.random() * array.length | 0];
    };
  });


  /*
  --------------------------------------------
       Begin cdShuffle.coffee
  --------------------------------------------
   */

  angular.module('cdShuffle', []).factory("cdShuffle", function() {
    return function(input) {
      return angular.copy(input).sort(function(a, b) {
        if (Math.random() < 0.5) {
          return -1;
        } else {
          return 1;
        }
      });
    };
  });


  /*
  --------------------------------------------
       Begin cdTimeout.coffee
  --------------------------------------------
   */

  angular.module('cdTimeout', []).service("cdTimeout", function($timeout) {
    return function(time, call) {
      return $timeout(call, time);
    };
  });

}).call(this);
